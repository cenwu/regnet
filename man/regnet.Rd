% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regnet.R
\name{regnet}
\alias{regnet}
\title{fit a regression for given lambda with network-based regularization}
\usage{
regnet(X, Y, response = c("continuous", "binary", "survival"),
  penalty = c("network", "mcp", "lasso"), lamb.1 = NULL, lamb.2 = NULL,
  r = NULL, clv = NULL, initiation = NULL, alpha.i = 1, robust = TRUE,
  standardize = TRUE)
}
\arguments{
\item{X}{matrix of predictors withour intercept. Each row should be an observation vector. The column of 1 will be added to the X matric
by the programme as the intercept.}

\item{Y}{response vairable. For response="binary" should be a numeric vector with zeros and ones. For response="survival", y should be a
two-column matrix with columns named 'time' and 'status'. The latter is a binary variable, with '1' indicating death, and '0'
indicating right censored.}

\item{response}{response type. regnet now supports two types of response: "binary" and "survival".}

\item{penalty}{penalty type. regnet provides three choices of penalty: "network", "mcp" and "lasso".}

\item{lamb.1}{the tuning parameter \eqn{\lambda 1} that imposes sparsity.}

\item{lamb.2}{the tuning parameter \eqn{\lambda 2} that controls the smoothness among coefficient profiles. Only needed for network penalty.}

\item{r}{the regularization parameter in MCP.}

\item{clv}{a value or a vector, indexing variables that are not subject to penalty. clv only works for survival response for now,
and will be ignored for other types of responses.}

\item{initiation}{method for initiating the coefficient vector. For binary response, the default is elastic-net,
and for survival response the default is zero.}

\item{alpha.i}{the elastic-net mixing parameter. The program can use the elastic-net for choosing initial values of
the coefficient vector. alpha.i is the elastic-net mixing parameter, with \eqn{0 \le alpha.i \le 1}. \eqn{alpha.i=1} is the
lasso penalty, and \eqn{alpha.i=0} the ridge penalty. If user chooses a method other than elastic-net for initializing
coefficient, alpha.i will be ignored.}

\item{robust}{logical flag. Whether or not to use robust methods. Robust methods are only available for survival response.}

\item{standardize}{logical flag for standardizing variables in X; default is TRUE. If variables are already in the same units,
you might not wish to precede standardization.}
}
\value{
the estimated coefficients vector.
}
\description{
Fit a network-based regression for given values of lambda1 and lambda2.
Typical usage is to have the cv.regnet function compute the optimal lambdas, then provide them to the
regnet function. User can also choose to use MCP or Lasso regularization.
}
\examples{
data(SurvExample)
X = rgn.surv$X
Y = rgn.surv$Y
clv = c(1:5) # variable 1 to 5 are clinical variables, we choose not to penalize them here.
lambda1 = 5*10^-4
lambda2 = 10^-3
b = regnet(X, Y, "survival", "network", lambda1, lambda2, clv=clv, robust=TRUE)
index = which(rgn.surv$beta != 0)
pos = which(b != 0)
tp = length(intersect(index, pos))
fp = length(pos) - tp
list(tp=tp, fp=fp)

}
\references{
Ren, J., He, T., Li, Y., Liu, S., Du, Y., Jiang, Y., Wu, C. (2017).
Network-based regularization for high dimensional SNP data in the case-control study of
Type 2 diabetes. BMC Genetics, 18(1):44.
}
\seealso{
\code{\link{cv.regnet}}
}
